- id: detect-unencrypted-ansible-vault
  name: Ansible Vaults Encryption Check
  description: Checks that Ansible vault files are encrypted.
  entry: pre-commit-hooks/detect-unencrypted-ansible-vault.sh
  files: ((^|/)vault|vault.y[a]{0,1}ml$|.vault$)
  language: script
  types: [executable]

- id: detect-unsigned-commit
  name: Git Commit PGP Signature Verification
  description: Warns you when you don't push signed commits.
  entry: pre-commit-hooks/detect-unsigned-commit.sh
  language: script
  types: [executable]
  always_run: true

- id: terragrunt-fmt
  name: Terragrunt Format
  description: Format all Terragrunt configurations under the folders passed as parameter.
  entry: pre-commit-hooks/terragrunt-fmt.sh
  require_serial: true
  language: script

- id: terragrunt-validate
  name: Terragrunt Validate
  description: Validates all Terragrunt configurations under the folders passed as parameter.
  entry: pre-commit-hooks/terragrunt-validate.sh
  require_serial: true
  language: script

- id: terraform-fmt
  name: Terraform Format
  description: Format all Terraform configurations passed as parameter.
  entry: pre-commit-hooks/terraform-fmt.sh
  require_serial: true
  language: script

- id: terraform-validate
  name: Terraform Validate
  description: Validates all Terraform configurations passed as parameter.
  entry: pre-commit-hooks/terraform-validate.sh
  require_serial: true
  language: script

- id: terraform-docs
  name: Terraform Docs
  description: Generate the module/component README.md Terraform Documentation with inject mode.
  entry: pre-commit-hooks/terraform-docs.sh
  require_serial: true
  language: script

- id: requirements-txt-fixer
  name: fix requirements.txt
  description: sorts entries and fixes single = to == in requirements.txt.
  entry: requirements-txt-fixer
  language: python
  files: requirements.*\.txt$

- id: tf-module-checker
  name: check terraform modules for latest
  description: Checks if latest is set on ref in terraform modules.
  entry: tf-module-checker
  language: python
  files: .tf$

- id: tf-provider-gen
  name: Generate tf provider
  description: Generate a provider file for terraform validate step.
  entry: provider-gen
  language: python
  files: .tf$

- id: tf-provider-cleanup
  name: Remove-tf-provider
  description: Cleanup up the provider file after terraform validation.
  entry: remove-provider
  language: python
  files: .tf$

- id: tf-cache-cleanup
  name: Clean up terraform cache
  description: Cleanup up the terraform cache.
  entry: tf-cache-clean
  language: python
  files: .tf$

- id: trivy-vulns
  name: Trivy check for Vulnerabilities
  description: Trivy check for Vulnerabilities.
  entry: pre-commit-hooks/trivy-vulns.sh
  require_serial: true
  language: script

- id: dotnet-format
  name: dotnet-format
  language: system
  entry: dotnet format -v normal --no-restore --include